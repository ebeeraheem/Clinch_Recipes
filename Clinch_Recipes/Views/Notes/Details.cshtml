@model Note

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div class="container">
    <div class="row">
        <div class="row">
            <div class="col-8">
                <a class="btn btn-primary" asp-controller="Notes" asp-action="Index">Back To All Notes</a>
            </div>
            <div class="col-4 gx-2">
                <a class="btn btn-secondary" asp-controller="Notes" asp-action="Edit" asp-route-id="@Model.Id">Edit Note</a>
                <a class="btn btn-danger" href="javascript:void(0);" onclick="confirmDelete('@Model.Id')">Delete Note</a>
            </div>
        </div>
        <div class="row">
            <h2 class="my-3">@Model.Title</h2>
            <span>Created on @Model.CreatedDate.ToCustomDateString()</span>

            <div class="noteContent">@Html.Raw(Model.Content)</div>
        </div>
    </div>
</div>

@{
    <link href="~/lib/highlightjs/styles/github-dark.css" rel="stylesheet" />
    <link href="~/lib/highlightjs/styles/github-dark.min.css" rel="stylesheet" />
}

@section Scripts{
    <script src="~/lib/highlightjs/highlight.js"></script>
    <script src="~/lib/highlightjs/highlight.min.js"></script>
    <script>hljs.highlightAll();</script>

    @* Add sweet alert cdn*@
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.12.2/dist/sweetalert2.all.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.12.2/dist/sweetalert2.min.css">

    <script type="text/javascript">
        function confirmDelete(noteId) {
            Swal.fire({
                title: "Are you sure?",
                text: "The note will be permanently deleted!",
                icon: "warning",
                reverseButtons: true,
                showCancelButton: true,
                confirmButtonColor: "#f00",
                cancelButtonColor: "#6c757d",
                confirmButtonText: "Delete"
            }).then((result) => {
                if (result.isConfirmed) {
                    deleteNote(noteId);
                }
            });
        }

        function deleteNote(noteId) {
            fetch(`/Notes/Delete/${noteId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            title: "Deleted!",
                            text: "Note deleted successfully.",
                            icon: "success",
                            timer: 2000,
                            showConfirmButton: false
                        }).then(() => {
                            // Redirect to the notes list
                            window.location.href = '/';
                        });

                        // In case the timer expires, still redirect
                        setTimeout(() => {
                            window.location.href = '/';
                        }, 2000);
                    } else {
                        Swal.fire({
                            title: "Error!",
                            text: "There was an error deleting the note.",
                            icon: "error"
                        });
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire({
                        title: "Error!",
                        text: "There was an error deleting the note.",
                        icon: "error"
                    });
                });
        }
    </script>

}
