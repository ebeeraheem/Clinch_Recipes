@model Note

@{
    ViewData["Title"] = @Model.Title;
}

<h1>Details</h1>

<div class="container">
    <div class="row">
        <div class="row">
            <div class="col-8">
                <a class="btn btn-primary" asp-controller="Notes" asp-action="Index">Back To All Notes</a>
            </div>

            @if (User.Identity?.IsAuthenticated is true)
            {
                <div class="col-4 gx-2">
                    <a class="btn btn-secondary" asp-controller="Notes" asp-action="Upsert" asp-route-id="@Model.Id">Edit Note</a>
                    <a class="btn btn-danger" href="javascript:void(0);" onclick="confirmDelete('@Model.Id')">Delete Note</a>
                </div>
            }
            
        </div>
        <div class="row">
            <h2 class="my-3">@Model.Title</h2>
            <span class ="note-date" data-utc-date="@Model.CreatedDate.ToString("o")"></span>

            <div class="noteContent">@Html.Raw(Model.Content)</div>
        </div>
    </div>
</div>

@{
    <link href="~/lib/highlightjs/styles/github-dark.css" rel="stylesheet" />
    <link href="~/lib/highlightjs/styles/github-dark.min.css" rel="stylesheet" />
}

@section Scripts{
    <script src="~/lib/highlightjs/highlight.js"></script>
    <script src="~/lib/highlightjs/highlight.min.js"></script>
    <script>hljs.highlightAll();</script>

    @* Add sweet alert cdn*@
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.12.2/dist/sweetalert2.all.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.12.2/dist/sweetalert2.min.css">

    <script type="text/javascript">
        function confirmDelete(noteId) {
            Swal.fire({
                title: "Are you sure?",
                text: "The note will be permanently deleted!",
                icon: "warning",
                reverseButtons: true,
                showCancelButton: true,
                confirmButtonColor: "#f00",
                cancelButtonColor: "#6c757d",
                confirmButtonText: "Delete"
            }).then((result) => {
                if (result.isConfirmed) {
                    deleteNote(noteId);
                }
            });
        }

        function deleteNote(noteId) {
            fetch(`/Notes/Delete/${noteId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            title: "Deleted!",
                            text: "Note deleted successfully.",
                            icon: "success",
                            timer: 2000,
                            showConfirmButton: false
                        }).then(() => {
                            // Redirect to the notes list
                            window.location.href = '/';
                        });

                        // In case the timer expires, still redirect
                        setTimeout(() => {
                            window.location.href = '/';
                        }, 2000);
                    } else {
                        Swal.fire({
                            title: "Error!",
                            text: "There was an error deleting the note.",
                            icon: "error"
                        });
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire({
                        title: "Error!",
                        text: "There was an error deleting the note.",
                        icon: "error"
                    });
                });
        }
    </script>

    <style>
        /* Header styles */
        h1 {
            font-size: clamp(1.75rem, 4vw, 2.5rem);
            margin-bottom: clamp(1rem, 3vw, 2rem);
            border-bottom: 2px solid #b5f8fe99;
            padding-bottom: 0.5rem;
            color: #edf7f6;
        }

        /* Link styles */
        .btn {
            border: 1px solid #b5f8fe99;
            transition: all 0.3s ease;
            padding: clamp(6px, 1vw, 8px) clamp(12px, 2vw, 16px);
            width: 100%;
            max-width: 150px
        }

        /* Primary button override */
        .btn-primary {
            background-color: transparent;
            color: #edf7f6;
            border-color: #b5f8fe99;
        }

            .btn-primary:hover {
                background-color: #b5f8fe22;
                border-color: #b5f8fe;
            }

        /* Secondary button override */
        .btn-secondary {
            background-color: transparent;
            color: #edf7f6;
            border-color: #b5f8fe99;
        }

            .btn-secondary:hover {
                background-color: #b5f8fe22;
                border-color: #b5f8fe;
            }

        /* Danger button override */
        .btn-danger {
            background-color: transparent;
            color: #edf7f6;
            border-color: #dc3545;
        }

            .btn-danger:hover {
                background-color: rgba(220, 53, 69, 0.2);
                border-color: #dc3545;
            }

        /* Focus states for all buttons */
        .btn:focus {
            box-shadow: 0 0 5px #b5f8fe66;
            outline: none;
        }
        .gx-2{
            display: flex;
            flex-wrap: wrap;
            gap: 4px;
            justify-content: end;
        }
    </style>
}
